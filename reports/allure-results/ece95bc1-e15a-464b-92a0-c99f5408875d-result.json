{"name": "test_alerts_with_all_locators", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=141.0.7390.108)\nStacktrace:\n\tGetHandleVerifier [0x0x7ff6328f1eb5+80197]\n\tGetHandleVerifier [0x0x7ff6328f1f10+80288]\n\t(No symbol) [0x0x7ff6326702fa]\n\t(No symbol) [0x0x7ff6326482a1]\n\t(No symbol) [0x0x7ff6326f799e]\n\t(No symbol) [0x0x7ff632718132]\n\t(No symbol) [0x0x7ff6326f0153]\n\t(No symbol) [0x0x7ff6326b8b02]\n\t(No symbol) [0x0x7ff6326b98d3]\n\tGetHandleVerifier [0x0x7ff632bae83d+2949837]\n\tGetHandleVerifier [0x0x7ff632ba8c6a+2926330]\n\tGetHandleVerifier [0x0x7ff632bc86c7+3055959]\n\tGetHandleVerifier [0x0x7ff63290cfee+191102]\n\tGetHandleVerifier [0x0x7ff6329150af+224063]\n\tGetHandleVerifier [0x0x7ff6328faf64+117236]\n\tGetHandleVerifier [0x0x7ff6328fb119+117673]\n\tGetHandleVerifier [0x0x7ff6328e10a8+11064]\n\tBaseThreadInitThunk [0x0x7ffbedd5e8d7+23]\n\tRtlUserThreadStart [0x0x7ffbee82c53c+44]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e7174ea15ba41fe42740658f290c49e4\")>\n\n    def test_alerts_with_all_locators(driver):\n        page = AlertsPage(driver)\n        page.open()\n    \n        # 1. ID Locator â†’ Simple Alert\n>       page.click_simple_alert()\n\ntests\\test_alerts_with_all_locators.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\alerts_page.py:46: in click_simple_alert\n    self.click(self.SIMPLE_ALERT_BTN)\npages\\base_page.py:17: in click\n    self.wait.until(EC.element_to_be_clickable(locator)).click()\n..\\..\\AppData\\Roaming\\Python\\Python313\\site-packages\\selenium\\webdriver\\support\\wait.py:129: in until\n    value = method(self._driver)\n..\\..\\AppData\\Roaming\\Python\\Python313\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:624: in _predicate\n    target = driver.find_element(*target)  # grab element at locator\n..\\..\\AppData\\Roaming\\Python\\Python313\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:926: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\AppData\\Roaming\\Python\\Python313\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:458: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002984AEE3770>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...ff6328e10a8+11064]\\\\n\\\\tBaseThreadInitThunk [0x0x7ffbedd5e8d7+23]\\\\n\\\\tRtlUserThreadStart [0x0x7ffbee82c53c+44]\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\") if isinstance(message, dict) else None\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=141.0.7390.108)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff6328f1eb5+80197]\nE       \tGetHandleVerifier [0x0x7ff6328f1f10+80288]\nE       \t(No symbol) [0x0x7ff6326702fa]\nE       \t(No symbol) [0x0x7ff6326482a1]\nE       \t(No symbol) [0x0x7ff6326f799e]\nE       \t(No symbol) [0x0x7ff632718132]\nE       \t(No symbol) [0x0x7ff6326f0153]\nE       \t(No symbol) [0x0x7ff6326b8b02]\nE       \t(No symbol) [0x0x7ff6326b98d3]\nE       \tGetHandleVerifier [0x0x7ff632bae83d+2949837]\nE       \tGetHandleVerifier [0x0x7ff632ba8c6a+2926330]\nE       \tGetHandleVerifier [0x0x7ff632bc86c7+3055959]\nE       \tGetHandleVerifier [0x0x7ff63290cfee+191102]\nE       \tGetHandleVerifier [0x0x7ff6329150af+224063]\nE       \tGetHandleVerifier [0x0x7ff6328faf64+117236]\nE       \tGetHandleVerifier [0x0x7ff6328fb119+117673]\nE       \tGetHandleVerifier [0x0x7ff6328e10a8+11064]\nE       \tBaseThreadInitThunk [0x0x7ffbedd5e8d7+23]\nE       \tRtlUserThreadStart [0x0x7ffbee82c53c+44]\n\n..\\..\\AppData\\Roaming\\Python\\Python313\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchWindowException"}, "start": 1760786560409, "stop": 1760786683526, "uuid": "9926938b-73de-49b9-b065-a5f9c71a4378", "testCaseId": "1bdfcf77f93e379cc6b9a58da9706baa", "fullName": "tests.test_alerts_with_all_locators#test_alerts_with_all_locators", "titlePath": ["tests", "test_alerts_with_all_locators.py"]}
{"uid":"f0078490bd7fcf14","name":"test_login_data_driven_csv[TC005]","fullName":"tests.test_login_data_driven_csv#test_login_data_driven_csv","historyId":"94973da4e70dc6ef25c868dcd80054e7","time":{"start":1760859479289,"stop":1760859500938,"duration":21649},"description":"Data-driven login test using CSV","descriptionHtml":"<p>Data-driven login test using CSV</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff621c71eb5+80197]\n\tGetHandleVerifier [0x0x7ff621c71f10+80288]\n\t(No symbol) [0x0x7ff6219f02fa]\n\t(No symbol) [0x0x7ff621a47cd7]\n\t(No symbol) [0x0x7ff621a47f9c]\n\t(No symbol) [0x0x7ff621a9ba87]\n\t(No symbol) [0x0x7ff621a703bf]\n\t(No symbol) [0x0x7ff621a987fb]\n\t(No symbol) [0x0x7ff621a70153]\n\t(No symbol) [0x0x7ff621a38b02]\n\t(No symbol) [0x0x7ff621a398d3]\n\tGetHandleVerifier [0x0x7ff621f2e83d+2949837]\n\tGetHandleVerifier [0x0x7ff621f28c6a+2926330]\n\tGetHandleVerifier [0x0x7ff621f486c7+3055959]\n\tGetHandleVerifier [0x0x7ff621c8cfee+191102]\n\tGetHandleVerifier [0x0x7ff621c950af+224063]\n\tGetHandleVerifier [0x0x7ff621c7af64+117236]\n\tGetHandleVerifier [0x0x7ff621c7b119+117673]\n\tGetHandleVerifier [0x0x7ff621c610a8+11064]\n\tBaseThreadInitThunk [0x0x7ffbb408e8d7+23]\n\tRtlUserThreadStart [0x0x7ffbb556c53c+44]","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3546377e8ba5a91b3e84c9910f9243f8\")>, test_case = {'Email': 'admin@test.co.uk', 'ExpectedResult': 'Valid', 'TestCaseID': 'TC005'}\n\n    @pytest.mark.parametrize(\"test_case\", TEST_DATA, ids=[tc[\"TestCaseID\"] for tc in TEST_DATA])\n    def test_login_data_driven_csv(driver, test_case):\n        \"\"\"Data-driven login test using CSV\"\"\"\n        username = test_case.get(\"Username\", \"\")\n        password = test_case.get(\"Password\", \"\")\n        expected = test_case.get(\"ExpectedResult\", \"Error\")\n    \n        driver.get(BASE_URL)\n        login_page = LoginPage(driver)\n>       login_page.login(username, password)\n\ntests\\test_login_data_driven_csv.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\login_page.py:14: in login\n    self.type(self.USERNAME, username)\npages\\base_page.py:20: in type\n    el = self.wait.until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3546377e8ba5a91b3e84c9910f9243f8\")>, method = <function visibility_of_element_located.<locals>._predicate at 0x0000018F9BC5F1A0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff621c71eb5+80197]\nE       \tGetHandleVerifier [0x0x7ff621c71f10+80288]\nE       \t(No symbol) [0x0x7ff6219f02fa]\nE       \t(No symbol) [0x0x7ff621a47cd7]\nE       \t(No symbol) [0x0x7ff621a47f9c]\nE       \t(No symbol) [0x0x7ff621a9ba87]\nE       \t(No symbol) [0x0x7ff621a703bf]\nE       \t(No symbol) [0x0x7ff621a987fb]\nE       \t(No symbol) [0x0x7ff621a70153]\nE       \t(No symbol) [0x0x7ff621a38b02]\nE       \t(No symbol) [0x0x7ff621a398d3]\nE       \tGetHandleVerifier [0x0x7ff621f2e83d+2949837]\nE       \tGetHandleVerifier [0x0x7ff621f28c6a+2926330]\nE       \tGetHandleVerifier [0x0x7ff621f486c7+3055959]\nE       \tGetHandleVerifier [0x0x7ff621c8cfee+191102]\nE       \tGetHandleVerifier [0x0x7ff621c950af+224063]\nE       \tGetHandleVerifier [0x0x7ff621c7af64+117236]\nE       \tGetHandleVerifier [0x0x7ff621c7b119+117673]\nE       \tGetHandleVerifier [0x0x7ff621c610a8+11064]\nE       \tBaseThreadInitThunk [0x0x7ffbb408e8d7+23]\nE       \tRtlUserThreadStart [0x0x7ffbb556c53c+44]\n\n..\\..\\AppData\\Roaming\\Python\\Python313\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1760859477188,"stop":1760859479288,"duration":2100},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false}],"testStage":{"description":"Data-driven login test using CSV","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff621c71eb5+80197]\n\tGetHandleVerifier [0x0x7ff621c71f10+80288]\n\t(No symbol) [0x0x7ff6219f02fa]\n\t(No symbol) [0x0x7ff621a47cd7]\n\t(No symbol) [0x0x7ff621a47f9c]\n\t(No symbol) [0x0x7ff621a9ba87]\n\t(No symbol) [0x0x7ff621a703bf]\n\t(No symbol) [0x0x7ff621a987fb]\n\t(No symbol) [0x0x7ff621a70153]\n\t(No symbol) [0x0x7ff621a38b02]\n\t(No symbol) [0x0x7ff621a398d3]\n\tGetHandleVerifier [0x0x7ff621f2e83d+2949837]\n\tGetHandleVerifier [0x0x7ff621f28c6a+2926330]\n\tGetHandleVerifier [0x0x7ff621f486c7+3055959]\n\tGetHandleVerifier [0x0x7ff621c8cfee+191102]\n\tGetHandleVerifier [0x0x7ff621c950af+224063]\n\tGetHandleVerifier [0x0x7ff621c7af64+117236]\n\tGetHandleVerifier [0x0x7ff621c7b119+117673]\n\tGetHandleVerifier [0x0x7ff621c610a8+11064]\n\tBaseThreadInitThunk [0x0x7ffbb408e8d7+23]\n\tRtlUserThreadStart [0x0x7ffbb556c53c+44]","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3546377e8ba5a91b3e84c9910f9243f8\")>, test_case = {'Email': 'admin@test.co.uk', 'ExpectedResult': 'Valid', 'TestCaseID': 'TC005'}\n\n    @pytest.mark.parametrize(\"test_case\", TEST_DATA, ids=[tc[\"TestCaseID\"] for tc in TEST_DATA])\n    def test_login_data_driven_csv(driver, test_case):\n        \"\"\"Data-driven login test using CSV\"\"\"\n        username = test_case.get(\"Username\", \"\")\n        password = test_case.get(\"Password\", \"\")\n        expected = test_case.get(\"ExpectedResult\", \"Error\")\n    \n        driver.get(BASE_URL)\n        login_page = LoginPage(driver)\n>       login_page.login(username, password)\n\ntests\\test_login_data_driven_csv.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\login_page.py:14: in login\n    self.type(self.USERNAME, username)\npages\\base_page.py:20: in type\n    el = self.wait.until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3546377e8ba5a91b3e84c9910f9243f8\")>, method = <function visibility_of_element_located.<locals>._predicate at 0x0000018F9BC5F1A0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff621c71eb5+80197]\nE       \tGetHandleVerifier [0x0x7ff621c71f10+80288]\nE       \t(No symbol) [0x0x7ff6219f02fa]\nE       \t(No symbol) [0x0x7ff621a47cd7]\nE       \t(No symbol) [0x0x7ff621a47f9c]\nE       \t(No symbol) [0x0x7ff621a9ba87]\nE       \t(No symbol) [0x0x7ff621a703bf]\nE       \t(No symbol) [0x0x7ff621a987fb]\nE       \t(No symbol) [0x0x7ff621a70153]\nE       \t(No symbol) [0x0x7ff621a38b02]\nE       \t(No symbol) [0x0x7ff621a398d3]\nE       \tGetHandleVerifier [0x0x7ff621f2e83d+2949837]\nE       \tGetHandleVerifier [0x0x7ff621f28c6a+2926330]\nE       \tGetHandleVerifier [0x0x7ff621f486c7+3055959]\nE       \tGetHandleVerifier [0x0x7ff621c8cfee+191102]\nE       \tGetHandleVerifier [0x0x7ff621c950af+224063]\nE       \tGetHandleVerifier [0x0x7ff621c7af64+117236]\nE       \tGetHandleVerifier [0x0x7ff621c7b119+117673]\nE       \tGetHandleVerifier [0x0x7ff621c610a8+11064]\nE       \tBaseThreadInitThunk [0x0x7ffbb408e8d7+23]\nE       \tRtlUserThreadStart [0x0x7ffbb556c53c+44]\n\n..\\..\\AppData\\Roaming\\Python\\Python313\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"dc697c1af2ff96b7","name":"log","source":"dc697c1af2ff96b7.txt","type":"text/plain","size":378}],"parameters":[],"hasContent":true,"attachmentsCount":1,"shouldDisplayMessage":true,"stepsCount":0,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1760859501052,"stop":1760859503498,"duration":2446},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login_data_driven_csv"},{"name":"host","value":"ASCENDI-8RP1I77"},{"name":"thread","value":"2188-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login_data_driven_csv"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"test_case","value":"{'TestCaseID': 'TC005', 'Email': 'admin@test.co.uk', 'ExpectedResult': 'Valid'}"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"f0078490bd7fcf14.json","parameterValues":["{'TestCaseID': 'TC005', 'Email': 'admin@test.co.uk', 'ExpectedResult': 'Valid'}"]}